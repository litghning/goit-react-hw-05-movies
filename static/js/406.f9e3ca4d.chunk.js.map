{"version":3,"file":"static/js/406.f9e3ca4d.chunk.js","mappings":"4OAOaA,GAJaC,EAAAA,EAAAA,GAAH,+DAIGA,EAAAA,EAAAA,GAAH,gFAMVC,EAAeD,EAAAA,EAAAA,GAAH,gDAIZE,EAAWF,EAAAA,EAAAA,EAAH,gH,SCFnB,EAVoB,SAAC,GAAe,EAAbG,OAEXC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,UAACR,EAAD,YACE,SAACE,EAAD,UAAeK,KACf,uBAAIC,MAFWF,EADP,GAOf,E,QCSH,EAhBsB,WACpB,IAAQA,GAAOG,EAAAA,EAAAA,MAAPH,GAEFI,GAASC,EAAAA,EAAAA,GAAmBC,EAAAA,GAAkBN,GAC5CO,EAA+BH,EAA/BG,SAAUC,EAAqBJ,EAArBI,MAAOC,EAAcL,EAAdK,UACzB,OACE,SAACC,EAAA,EAAD,CAAWD,UAAWA,EAAWD,MAAOA,EAAOD,SAAUA,EAAzD,SACIE,GAAiC,IAApBF,EAASI,QAGtB,SAACd,EAAD,oDAFA,SAAC,EAAD,CAAaC,OAAQS,KAM5B,C","sources":["components/MovieReviews/MovieReviews.styled.jsx","components/MovieReviews/MovieReviews.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["\nimport styled from '@emotion/styled';\n\nexport const ReviewList = styled.ul`\n  padding: 32px;\n  list-style: none;\n`;\nexport const ReviewItem = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 30px;\n  }\n`;\n\nexport const ReviewAuthor = styled.h2`\n  margin-bottom: 15px;\n`;\n\nexport const NoReview = styled.p`\n  padding-left: 32px;\n  padding-right: 32px;\n  font-size: 24px;\n  font-weight: 500;\n`;","import {\n    ReviewList,\n    ReviewItem,\n    ReviewAuthor,\n  } from './MovieReviews.styled';\n  const MovieReview = ({ movies }) => {\n    <ReviewList>\n      {movies.map(({ id, author, content }) => (\n        <ReviewItem key={id}>\n          <ReviewAuthor>{author}</ReviewAuthor>\n          <p>{content}</p>\n        </ReviewItem>\n      ))}\n    </ReviewList>;\n  };\n  export default MovieReview;","import { useParams } from 'react-router-dom';\nimport { getMoviesReviews } from 'api/Api';\nimport Container from 'components/Container';\nimport MovieReview from 'components/MovieReviews';\nimport useMovieSearchHook from 'api/ApiHook';\nimport { NoReview } from '../MovieReviews/MovieReviews.styled';\n\nconst MoviesDetails = () => {\n  const { id } = useParams();\n\n  const Actors = useMovieSearchHook(getMoviesReviews, id);\n  const { movieArr, error, isLoading } = Actors;\n  return (\n    <Container isLoading={isLoading} error={error} movieArr={movieArr}>\n      {!isLoading && movieArr.length !== 0 ? (\n        <MovieReview movies={movieArr} />\n      ) : (\n        <NoReview> There are no reviews for this film.</NoReview>\n      )}\n    </Container>\n  );\n};\n\nexport default MoviesDetails;"],"names":["ReviewItem","styled","ReviewAuthor","NoReview","movies","map","id","author","content","useParams","Actors","useMovieSearchHook","getMoviesReviews","movieArr","error","isLoading","Container","length"],"sourceRoot":""}